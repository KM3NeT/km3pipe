image: docker.km3net.de/base/python:3

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"


# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - test
  - coverage
  - doc

before_script:
  - python -V
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - make install

test-py2:
    image: docker.km3net.de/base/python:2
    stage: test
    script:
        - make test
        - make test-km3modules
    artifacts:
      reports:
        junit: "reports/junit*.xml"

test-py3.5:
    image: docker.km3net.de/base/python:3.5
    stage: test
    script:
        - make test
        - make test-km3modules
    artifacts:
      reports:
        junit: "reports/junit*.xml"

test-py3.6:
    image: docker.km3net.de/base/python:3.6
    stage: test
    script:
        - make test
        - make test-km3modules
    artifacts:
      reports:
        junit: "reports/junit*.xml"

test-py3.7:
    image: docker.km3net.de/base/python:3.7
    stage: test
    script:
        - make test
        - make test-km3modules
    artifacts:
      reports:
        junit: "reports/junit*.xml"

coverage:
    image: docker.km3net.de/base/python:3.6
    stage: coverage
    script:
    #     - make test-cov|grep TOTAL| awk  -F " " '{printf "COVERAGE: %4.4f%%\n", (1-$3/$2)*100 }'
    # coverage: '/COVERAGE ([0-9]{1,4}\.[0-9]{1,4}%)/'
        - make test-cov
    coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
    artifacts:
        paths:
            - reports/coverage

code_quality:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json

pages:
    stage: doc
    script:
        - cd doc && make html
        - mv _build/html ../public/
        - cd .. && mv reports/coverage public/coverage
    artifacts:
        paths:
            - public
